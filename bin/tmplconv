#!/usr/bin/env node

/**
 * Command line interface of tmplconv.
 */

"use strict";

var program = require('commander'),
    pkg = require('../package'),
    tmplconv = require('../lib');

program
    .version(pkg['version']);

//=========================
// Handle `tmplify` command
//=========================
program
    .command("tmplify <srcDir> <destDir> ")
    .description("Generate a template from existing files")
    .option('-d, --data <data>', "Name or path of data module.")
    .option('-p, --pattern <pattern>', "File name patterns")
    .option('-i, --ignore <ignore>', "File name patterns to ignore")
    .option('-P, --prefix <prefix>', "Embed prefix")
    .option('-S, --suffix <suffix>', "Embed suffix")
    .option('-e, --extname <extname>', "Embed Template extension name")
    .option('-s, --silent', "Disable console logs")
    .option('-c, --clean', "Cleanup destination directory before convert")
    .option('-n, --clean', "Write only first time. Skip if already exists")
    .action(function act(srcDir, destDir, options) {
        tmplconv.tmplify(srcDir, destDir, options, _done);
    });
//=========================
// Handle `render` command
//=========================
program
    .command("render <srcDir> <destDir> ")
    .description("")
    .action(function act(srcDir, destDir, options) {
        tmplconv.render(srcDir, destDir, options, _done);
    });

/** When command done. */
function _done(err) {
    if (err) {
        console.error(err);
        process.exit(1);
    } else {
        process.exit(0);
    }
}

program.parse(process.argv);